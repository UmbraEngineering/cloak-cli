#!/usr/bin/env node

require('../lib/utils');

var program = require('commander');

program
	.usage('<name> for <model> [options]')
	.option('-g, --use-global', 'use the global template')
	.option('-l, --use-local', 'use the local template')
	.option('-t, --template <template>', 'what template should be used')
	.parse(process.argv);

var name = program.args[0];
var source = program.useLocal ? 'local' : (program.useGlobal ? 'global' : null);
var template = program.template || 'base';

output('Creating new router "' + name + '"...');

var data = {
	ame: {
		hyphen: name,
		camel: name.replace(/-([a-z])/g, function(match, letter) {
			return letter.toUpperCase();
		}),
		class: name.replace(/(^|-)([a-z])/g, function(match, start, letter) {
			return letter.toUpperCase();
		})
	}
};

var file = 'routers/' + data.name.hyphen + '.js';
if (fileExists(file)) {
	output('\n');
	output.error('ERROR: Cannot create router "' + name + '"; File already exists.\n');
	process.exit(1);
	return;
}

renderFile(templateFile('router/' + template + '.js', source), appFile(file), data);

output(' Done.\n');
